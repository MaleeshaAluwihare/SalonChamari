{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITP\\\\SalonChamari\\\\frontend\\\\src\\\\components\\\\calendar.js\",\n  _s = $RefreshSig$();\n// Frontend: MyCalendar.js\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCalendar = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [bookings, setBookings] = useState([]);\n  const onChange = async newDate => {\n    setDate(newDate);\n    try {\n      const selectedDate = newDate.toISOString().split('T')[0]; // Format date as YYYY-MM-DD\n      const response = await fetch(`/api/makebooking/salonTable/${selectedDate}`);\n      const fetchedBookings = await response.json();\n      setBookings(fetchedBookings);\n    } catch (err) {\n      console.error('Error fetching bookings:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), bookings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Bookings for \", date.toLocaleDateString(), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [booking.time, \" - \", booking.name]\n        }, booking._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCalendar, \"OMd28fsiSavSkeaV/de3YgJa5O0=\");\n_c = MyCalendar;\nexport default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","MyCalendar","_s","date","setDate","Date","bookings","setBookings","onChange","newDate","selectedDate","toISOString","split","response","fetch","fetchedBookings","json","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","value","length","toLocaleDateString","map","booking","time","name","_id","_c","$RefreshReg$"],"sources":["D:/ITP/SalonChamari/frontend/src/components/calendar.js"],"sourcesContent":["// Frontend: MyCalendar.js\r\nimport React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst MyCalendar = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [bookings, setBookings] = useState([]);\r\n\r\n  const onChange = async (newDate) => {\r\n    setDate(newDate);\r\n\r\n    try {\r\n      const selectedDate = newDate.toISOString().split('T')[0]; // Format date as YYYY-MM-DD\r\n      const response = await fetch(`/api/makebooking/salonTable/${selectedDate}`);\r\n      const fetchedBookings = await response.json();\r\n      setBookings(fetchedBookings);\r\n    } catch (err) {\r\n      console.error('Error fetching bookings:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Calendar Component</h2>\r\n      <Calendar onChange={onChange} value={date} />\r\n\r\n      {/* Display fetched bookings for the selected date */}\r\n      {bookings.length > 0 && (\r\n        <div>\r\n          <h3>Bookings for {date.toLocaleDateString()}:</h3>\r\n          <ul>\r\n            {bookings.map((booking) => (\r\n              <li key={booking._id}>\r\n                {/* Display booking details (e.g., time, name) */}\r\n                {booking.time} - {booking.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCalendar;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,QAAQ,GAAG,MAAOC,OAAO,IAAK;IAClCL,OAAO,CAACK,OAAO,CAAC;IAEhB,IAAI;MACF,MAAMC,YAAY,GAAGD,OAAO,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BJ,YAAa,EAAC,CAAC;MAC3E,MAAMK,eAAe,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC7CT,WAAW,CAACQ,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAChD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BxB,OAAA,CAACF,QAAQ;MAACU,QAAQ,EAAEA,QAAS;MAACiB,KAAK,EAAEtB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAG5ClB,QAAQ,CAACoB,MAAM,GAAG,CAAC,iBAClB1B,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,GAAI,eAAa,EAACjB,IAAI,CAACwB,kBAAkB,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDxB,OAAA;QAAAoB,QAAA,EACGd,QAAQ,CAACsB,GAAG,CAAEC,OAAO,iBACpB7B,OAAA;UAAAoB,QAAA,GAEGS,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACE,IAAI;QAAA,GAFvBF,OAAO,CAACG,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAtCID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}