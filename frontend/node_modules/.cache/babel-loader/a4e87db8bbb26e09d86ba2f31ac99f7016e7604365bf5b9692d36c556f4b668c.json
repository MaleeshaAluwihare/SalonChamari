{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITP\\\\SalonChamari\\\\frontend\\\\src\\\\components\\\\calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCalendar = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchBookings(); // Fetch bookings when component mounts or date changes\n  }, [date]);\n  const onChange = newDate => {\n    setDate(newDate);\n  };\n  const fetchBookings = async () => {\n    setLoading(true);\n    try {\n      const formattedDate = date.toISOString().split('T')[0];\n      const response = await fetch(`/api/makebooking/salonTable/${formattedDate}`);\n      const data = await response.json();\n      setBookings(data);\n    } catch (error) {\n      console.error('Error fetching bookings:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Bookings for \", date.toDateString(), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [booking.time, \" - \", booking.name]\n        }, booking._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), bookings.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No bookings for \", date.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCalendar, \"GaWDq2FJIimEcz747uTaRrqRvfA=\");\n_c = MyCalendar;\nexport default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","MyCalendar","_s","date","setDate","Date","bookings","setBookings","loading","setLoading","fetchBookings","onChange","newDate","formattedDate","toISOString","split","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","value","toDateString","map","booking","time","name","_id","length","_c","$RefreshReg$"],"sources":["D:/ITP/SalonChamari/frontend/src/components/calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst MyCalendar = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [bookings, setBookings] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchBookings(); // Fetch bookings when component mounts or date changes\r\n  }, [date]);\r\n\r\n  const onChange = (newDate) => {\r\n    setDate(newDate);\r\n  };\r\n\r\n  const fetchBookings = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const formattedDate = date.toISOString().split('T')[0];\r\n      const response = await fetch(`/api/makebooking/salonTable/${formattedDate}`);\r\n      const data = await response.json();\r\n      setBookings(data);\r\n    } catch (error) {\r\n      console.error('Error fetching bookings:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Calendar Component</h2>\r\n      <Calendar onChange={onChange} value={date} />\r\n      <div>\r\n        <h3>Bookings for {date.toDateString()}:</h3>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <ul>\r\n            {bookings.map((booking) => (\r\n              <li key={booking._id}>\r\n                {booking.time} - {booking.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {bookings.length === 0 && !loading && <p>No bookings for {date.toDateString()}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}